---
interface CarreerEvent {
  fromDate: Date;
  toDate: Date;
  description: string;
}

interface Props {
  title: string;
  events?: CarreerEvent[];
}

const locale = Astro.currentLocale;
const dateOpts: Intl.DateTimeFormatOptions = {
  year: "numeric",
  month: "short",
};

const { events = [], title } = Astro.props;
---

<article>
  <h2>{title}</h2>
  <ol reversed class="timeline">
    {
      events.map((e) => (
        <li class="event">
          <div class="datecontainer">
            <time datetime={e.fromDate.toISOString()} class="date">
              {e.fromDate.toLocaleDateString(locale, dateOpts)}
            </time>
            -
            <time datetime={e.toDate.toISOString()} class="date">
              {e.toDate.toLocaleDateString(locale, dateOpts)}
            </time>
          </div>
          <p>{e.description}</p>
        </li>
      ))
    }
  </ol>
</article>

<style>
  article {
    display: contents;
  }
  h2 {
    margin-bottom: 10px;
  }
  .event {
    padding: 0px 15px;
    position: relative;
    grid-column: 1 / 3;
    display: grid;
    grid-template-columns: subgrid;
  }
  /* The circles on the timeline */
  .event::before {
    content: "";
    position: absolute;
    width: 12px;
    height: 12px;
    left: -10px;
    background-color: white;
    border: 4px solid var(--primary);
    border-radius: 50%;
    z-index: 1;
  }

  /* Container for events and the ruler */
  .timeline {
    position: relative;
    margin-left: 10px;
    grid-column: 1 / 3;
    display: grid;
    grid-template-columns: subgrid;
    row-gap: 20px;
  }

  /* The actual timeline (the vertical ruler) */
  .timeline::before {
    content: "";
    position: absolute;
    width: 3px;
    /* Must be -`half of width` */
    margin-left: -1.5px;
    background-color: black;
    top: 0;
    bottom: 0;
    left: 0;
    border-radius: 5px;
  }
</style>
